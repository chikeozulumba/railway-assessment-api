// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator nestgraphql {
  provider = "node node_modules/prisma-nestjs-graphql"
  output   = "../src/models"
  reExport = Single
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Project {
  id               String    @id @default(auto()) @map("_id") @db.ObjectId
  userId           String    @map("user_id") @db.ObjectId
  tokenId          String?   @map("token_id") @db.ObjectId
  token            Token?    @relation(fields: [tokenId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  user             User      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  railwayProjectId String    @unique @map("railway_project_id")
  name             String?
  description      String?
  projectCreatedAt DateTime? @map("project_cpdated_at")
  projectUpdatedAt DateTime? @map("project_updated_at")
  prDeploys        Boolean?  @map("pr_deploys")
  prForks          Boolean?  @map("pr_forks")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  services Service[]

  @@map("projects")
}

model Service {
  id               String    @id @default(auto()) @map("_id") @db.ObjectId
  userId           String    @map("user_id") @db.ObjectId
  user             User      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  projectId        String    @map("project_id") @db.ObjectId
  project          Project   @relation(fields: [projectId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  railwayServiceId String    @unique @map("railway_service_id")
  name             String?
  icon             String?
  serviceCreatedAt DateTime? @map("service_cpdated_at")
  serviceUpdatedAt DateTime? @map("service_updated_at")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  instances ServiceInstance[]

  @@map("services")
}

model ServiceInstance {
  id                       String  @id @default(auto()) @map("_id") @db.ObjectId
  userId                   String  @map("user_id") @db.ObjectId
  user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  serviceId                String  @map("service_id") @db.ObjectId
  service                  Service @relation(fields: [serviceId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  railwayServiceInstanceId String  @unique @map("railway_service_instance_id")
  builder                  String? @map("builder")
  buildCommand             String? @map("build_command")
  sourceImage              String? @map("source_image")
  sourceRepo               String? @map("source_repo")
  sourceTemplateName       String? @map("source_template_name")
  sourceTemplateSource     String? @map("source_template_source")
  startCommand             String? @map("start_command")
  numReplicas              String? @map("num_replicas")
  domains                  Json?

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@map("service_instances")
}

enum UserStatus {
  suspended
  deleted
  active
}

model Token {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String?   @map("user_id") @db.ObjectId @unique
  user      User?    
  name      String?
  value     String   @unique
  isDefault Boolean? @default(false)

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @default(now()) @updatedAt @map("updated_at")
  projects  Project[]

  @@map("tokens")
}

model User {
  id                        String  @id @default(auto()) @map("_id") @db.ObjectId
  uid                       String  @unique @map("uid")
  fullName                  String? @map("full_name")
  email                     String?
  defaultRailwayTokenId     String? @unique @map("default_railway_token") @db.ObjectId
  defaultRailwayToken       Token?  @relation(fields: [defaultRailwayTokenId], references: [id], onDelete: NoAction, onUpdate: Cascade)
  railwayId                 String? @map("railway_id")
  railwayregistrationStatus String? @map("railway_registration_status")
  railwayAccountStatus      String? @map("railway_account_status")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  projects         Project[]
  services         Service[]
  serviceInstances ServiceInstance[]

  @@map("users")
}
